---
interface Props {
  currentLocale: 'ar' | 'en';
}

const { currentLocale } = Astro.props;

const languages = {
  ar: { name: 'English', href: '/en/', flag: 'ðŸ‡ºðŸ‡¸' },
  en: { name: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©', href: '/', flag: 'ðŸ‡¸ðŸ‡¦' },
};

const alternateLanguage = languages[currentLocale];
---

<div class="language-toggle">
  <a 
    href={alternateLanguage.href}
    class="language-link"
    aria-label={`Switch to ${alternateLanguage.name}`}
    data-toggle-lang={currentLocale === 'ar' ? 'en' : 'ar'}
  >
    <span class="flag" aria-hidden="true">{alternateLanguage.flag}</span>
    <span class="lang-text">{alternateLanguage.name}</span>
  </a>
</div>

<style>
  .language-toggle {
    display: flex;
    align-items: center;
    position: relative;
    z-index: 100;
  }

  .language-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    color: white;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .language-link:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  .flag {
    font-size: 1.1em;
    line-height: 1;
  }

  .lang-text {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }

  /* RTL support */
  :global([dir="rtl"]) .language-link {
    flex-direction: row-reverse;
  }

  /* Responsive design */
  @media (max-width: 640px) {
    .language-link {
      padding: 0.5rem 0.75rem;
      font-size: 0.8rem;
    }
    
    .lang-text {
      display: none;
    }
    
    .flag {
      font-size: 1.2em;
    }
  }
</style>

<script>
  // Add click handler for smooth direction transition
  document.addEventListener('DOMContentLoaded', () => {
    const langLinks = document.querySelectorAll('[data-toggle-lang]');
    
    langLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        const targetLang = (e.currentTarget as HTMLElement).dataset.toggleLang;
        
        // Add transition class to body for smooth direction change
        document.body.classList.add('lang-transition');
        
        // Set the new direction attribute before navigation
        if (targetLang === 'ar') {
          document.documentElement.dir = 'rtl';
          document.documentElement.lang = 'ar';
        } else {
          document.documentElement.dir = 'ltr';
          document.documentElement.lang = 'en';
        }
        
        // Remove transition class after animation
        setTimeout(() => {
          document.body.classList.remove('lang-transition');
        }, 300);
      });
    });
  });
</script>