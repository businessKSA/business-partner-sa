---
interface Props {
  lang: 'ar' | 'en';
  t: any;
}

const { lang, t } = Astro.props;
---

<section id="contact" class="section contact">
  <div class="container">
    <h2 style="text-align: center; margin-bottom: 3rem;">{t.contact.title}</h2>
    
    <div class="contact-content">
      <form id="contact-form" style="max-width: none;">
        <div class="form-group">
          <label for="entityName">{t.contact.form.entityName}</label>
          <input type="text" id="entityName" name="entityName" required />
        </div>
        
        <div class="form-group">
          <label for="contactName">{t.contact.form.contactName}</label>
          <input type="text" id="contactName" name="contactName" required />
        </div>
        
        <div class="form-group">
          <label for="email">{t.contact.form.email}</label>
          <input type="email" id="email" name="email" required />
        </div>
        
        <div class="form-group">
          <label for="phone">{t.contact.form.phone}</label>
          <input 
            type="tel" 
            id="phone" 
            name="phone" 
            pattern="^(?:\+?966|0)?5\d{8}$" 
            placeholder="05XXXXXXXX"
            required 
          />
        </div>
        
        <div class="form-group">
          <label for="message">{t.contact.form.message}</label>
          <textarea id="message" name="message" rows="4"></textarea>
        </div>
        
        <!-- Hidden language field -->
        <input type="hidden" name="lang" value={lang} />
        
        <button type="submit" class="btn btn-primary" style="width: 100%; justify-content: center;">
          <span class="submit-text">{t.contact.form.submit}</span>
        </button>
        
        <div id="form-message" style="margin-top: 1rem; padding: 1rem; border-radius: 6px; display: none;"></div>
      </form>
      
      <div class="company-details">
        <h3>{t.contact.company.title}</h3>
        
        <div class="detail-item">
          <span class="detail-label">{t.contact.company.details.phone}:</span>
          <a href="tel:+966503793356">{t.contact.company.values.phone}</a>
        </div>
        
        <div class="detail-item">
          <span class="detail-label">{t.contact.company.details.email}:</span>
          <a href="mailto:business@businesspartner.sa">{t.contact.company.values.email}</a>
        </div>
        
        <div class="detail-item">
          <span class="detail-label">{t.contact.company.details.website}:</span>
          <a href="https://businesspartner.sa" target="_blank">{t.contact.company.values.website}</a>
        </div>
        
        <div class="detail-item">
          <span class="detail-label">{t.contact.company.details.address}:</span>
          <span>{t.contact.company.values.address}</span>
        </div>
        
        <div class="detail-item">
          <span class="detail-label">{t.contact.company.details.cr}:</span>
          <span>{t.contact.company.values.cr}</span>
        </div>
        
        <div class="detail-item">
          <span class="detail-label">{t.contact.company.details.vat}:</span>
          <span>{t.contact.company.values.vat}</span>
        </div>
        
        <div class="detail-item">
          <span class="detail-label">{t.contact.company.details.unified}:</span>
          <span>{t.contact.company.values.unified}</span>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .form-message {
    padding: 1rem;
    border-radius: 6px;
    margin-top: 1rem;
  }
  
  .form-message.success {
    background: #d1fae5;
    color: #065f46;
    border: 1px solid #a7f3d0;
  }
  
  .form-message.error {
    background: #ffffff;
    color: #374151;
    border: 1px solid #d1d5db;
  }
  
  .btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
</style>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const messageDiv = document.getElementById('form-message') as HTMLDivElement;
  
  function showMessage(message: string, type: 'success' | 'error') {
    messageDiv.textContent = message;
    messageDiv.className = `form-message ${type}`;
    messageDiv.style.display = 'block';
    
    // Auto-hide after 5 seconds
    setTimeout(() => {
      messageDiv.style.display = 'none';
    }, 5000);
  }
  
  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const submitText = submitButton.querySelector('.submit-text') as HTMLSpanElement;
      const originalText = submitText.textContent;
      const lang = document.documentElement.lang as 'ar' | 'en';
      
      // Show loading state
      submitButton.disabled = true;
      submitText.textContent = lang === 'ar' ? 'جاري الإرسال...' : 'Sending...';
      
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      
      try {
        // Get lead endpoint from environment or fallback
        const leadEndpoint = import.meta.env.PUBLIC_LEAD_ENDPOINT || '/api/contact';
        
        // Send to lead endpoint
        const response = await fetch(leadEndpoint, {
          method: 'POST',
          headers: { 
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({
            entityName: data.entityName,
            contactName: data.contactName,
            email: data.email,
            phone: data.phone,
            message: data.message,
            lang: data.lang,
            source: 'businesspartner.sa',
            timestamp: new Date().toISOString()
          })
        });
        
        if (response.ok) {
          // Success message
          const successMsg = lang === 'ar' 
            ? 'تم إرسال رسالتك بنجاح! سنتواصل معك قريباً.'
            : 'Your message has been sent successfully! We will contact you soon.';
          
          showMessage(successMsg, 'success');
          
          // Reset form
          form.reset();
          
          console.log('Lead submitted successfully');
        } else {
          throw new Error(`HTTP ${response.status}`);
        }
      } catch (error) {
        // Error message
        const errorMsg = lang === 'ar'
          ? 'حدث خطأ في إرسال الرسالة. يرجى المحاولة مرة أخرى.'
          : 'An error occurred while sending your message. Please try again.';
        
        showMessage(errorMsg, 'error');
        console.error('Error submitting lead:', error);
      } finally {
        // Restore button state
        submitButton.disabled = false;
        submitText.textContent = originalText;
      }
    });
  }
</script>